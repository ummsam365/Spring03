<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ncs.MemberMapper">

<!-- namespace : 자바클래스에서 mapper 를 찾는 경로
				  다른 mapper와 중복되지 않도록 네임스페이스 기재 

** Mybatis
	=> PreparedStatement 처리가 기본
	=> 자동으로 DB close() 해줌
	
** #{id}
 => getID() or setID("..") 
 => 해당되는 값
 => Map 타입의 경우 키값이 id 인 값을 찾음   
 
 ** ${id} : id 라는 필드 표현 
-->	

<!-- PageList -->
<select id="totalRowCount" resultType="int">
	select count(*) from member
</select>
<select id="pageList" resultType="vo.MemberVO">
  select id,password,name,lev,birthd,point,weight,rid,uploadfile,rnum  
  from (select m.* , ROW_NUMBER() OVER(order by id asc) rnum from member m ) 
  where rnum between #{sno} and #{eno}
</select>

<!-- checkSelectList 
=> select * from board where id in ('banana','apple','green')
		order by root desc, step asc
=> collection : list 또는 array Type 의 매개변수 (vo에 정의된 변수 사용)	
   item : collection 의  데이터 를 1건씩 전달 받으며 위의 구문을 완성함. 	
   index : 필요시 사용,  0 부터 시작 (0,1,2...) 
           <foreach ...index="index"..>   
                 ...... "${index}" : index 값 사용하기 
                      사용하지 않는경우 아래처럼 표시해도 되고, 생략해도됨.
           <foreach .... index="" open="(" close=")" separator=",">  
-->
<!-- 
select * from member where lev=? or lev=? or.....order by id (비추)
select * from member where lev in('A','B','C') order by id (선택) -->
<select id="checkselectList" resultType="vo.MemberVO">
	select * from member where lev in 
	<foreach collection="check" item="it" open="(" close=")" separator=",">	
	#{it}
	</foreach>	
	 order by id
</select>

<select id="selectList" resultType="vo.MemberVO">
	select * from member order by id
</select>

<select id="selectOne" resultType="vo.MemberVO">
	select * from member where id=#{id}
</select>

<insert id="insert">
	INSERT into member values(
	#{id},#{password},#{name},#{lev},#{birthd},
	#{point},#{weight},#{rid},#{uploadfile})
</insert>

<update id="update">
	UPDATE member set password=#{password}, 
	name=#{name}, lev=#{lev}, birthd=#{birthd}, 
	point=#{point}, weight=#{weight}, rid=#{rid},
	uploadfile=#{uploadfile} WHERE id=#{id}
</update>

<delete id="delete">
	DELETE from member where id=#{id}
</delete>

</mapper>  
